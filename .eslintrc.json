{
  "files": ["*.ts", "*.tsx"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "@typescript-eslint/eslint-plugin",
    "react",
    "import",
    "unused-imports"
  ],
  "extends": [
    "next",
    "next/core-web-vitals",
    "prettier",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint",
    "prettier/react"
  ],
  "settings": {
    "import/resolver": {
      "alias": {
        "map": [["@src", "./src/*"]],
        "extensions": [".ts", ".tsx", ".js", "jsx", ".json"]
      }
    }
  },
  "root": true,
  "env": {
    "node": true,
    "jest": true
  },
  "ignorePatterns": [".eslintrc.json"],
  "rules": {
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports-ts": "warn",
    "import/order": [
      "error",
      {
        "groups": [
          ["builtin", "external"],
          "internal",
          ["parent", "sibling", "index"],
          "object", // オブジェクト参照（import foo from 'bar';）
          "type", // タイプ指定（import type { foo } from 'bar';）、Flowの型宣言（import type Foo from 'bar';）
          "sideEffect", // 副作用のあるモジュール（import 'bar';）
          "unknown", // すべての外部import文が@aliasフィールドを持たない場合のデフォルト
          "@src" // @aliasフィールドを持つ外部import文
        ],
        "pathGroups": [
          {
            "pattern": "{react,react-dom/**,react-router-dom,next/**}",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "{next-seo}",
            "group": "builtin",
            "position": "after"
          },
          {
            "pattern": "{@mui/**,@emotion/**}",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@src/**",
            "group": "parent",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        },
        "newlines-between": "always"
      }
    ],
    "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "type-imports" }]
  }
}
